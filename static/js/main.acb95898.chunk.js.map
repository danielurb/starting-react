{"version":3,"sources":["PokemonContex.js","PokemonType.js","components/PokemonInfo.jsx","components/PokemonFilter.jsx","components/PokemonRow.jsx","components/PokemonTable.jsx","App.js","reportWebVitals.js","index.js"],"names":["PokemonContext","React","createContext","PropTypes","shape","id","number","isRequired","name","english","string","japanese","chinese","french","type","arrayOf","base","HP","Attack","Defense","Speed","PokemonInfo","selectedPokemon","useContext","state","Object","keys","map","key","Input","styled","input","PokemonFilter","PokemonContex","filter","dispatch","value","onChange","evt","payload","target","PokemonRow","pokemon","onSelect","join","Button","variant","color","onClick","PokemonTable","width","toLowerCase","includes","slice","pokemonReducer","action","Error","Title","h1","PageContainer","div","TwoColumnLayout","App","useReducer","useEffect","fetch","then","resp","json","data","Provider","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acb95898.chunk.js","sourcesContent":["import React from 'react';\n\nconst PokemonContext = React.createContext({});\n\nexport default PokemonContext;\n","import PropTypes from 'prop-types';\n\nconst PokemonType = PropTypes.shape({\n\tid: PropTypes.number.isRequired,\n\tname: PropTypes.shape({\n\t\tenglish: PropTypes.string.isRequired,\n\t\tjapanese: PropTypes.string.isRequired,\n\t\tchinese: PropTypes.string.isRequired,\n\t\tfrench: PropTypes.string.isRequired\n\t}),\n\ttype: PropTypes.arrayOf(PropTypes.string.isRequired),\n\tbase: PropTypes.shape({\n\t\tHP: PropTypes.number.isRequired,\n\t\tAttack: PropTypes.number.isRequired,\n\t\tDefense: PropTypes.number.isRequired,\n\t\t'Sp. Attack': PropTypes.number.isRequired,\n\t\t'Sp. Defense': PropTypes.number.isRequired,\n\t\tSpeed: PropTypes.number.isRequired\n\t})\n});\n\nexport default PokemonType;\n","import React, { useContext } from 'react';\nimport PokemonContext from '../PokemonContex';\nimport PokemonType from '../PokemonType';\n\nconst PokemonInfo = () => {\n\tconst {\n\t\tstate: { selectedPokemon }\n\t} = useContext(PokemonContext);\n\n\treturn selectedPokemon ? (\n\t\t<div>\n\t\t\t<h1>{selectedPokemon.name.english}</h1>\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t\t{Object.keys(selectedPokemon.base).map(key => (\n\t\t\t\t\t\t<tr key={key}>\n\t\t\t\t\t\t\t<td>{key}</td>\n\t\t\t\t\t\t\t<td>{selectedPokemon.base[key]}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t) : null;\n};\n\nPokemonInfo.propTypes = { pokemon: PokemonType };\n\nexport default PokemonInfo;\n","import React, { useContext } from 'react';\nimport styled from '@emotion/styled';\n\nimport PokemonContex from '../PokemonContex';\n\nconst Input = styled.input`\n\twidth: 100%;\n\tpadding: 0.2rem;\n\tfont-size: large;\n`;\n\nconst PokemonFilter = () => {\n\tconst {\n\t\tstate: { filter },\n\t\tdispatch\n\t} = useContext(PokemonContex);\n\n\treturn (\n\t\t<Input\n\t\t\ttype='text'\n\t\t\tvalue={filter}\n\t\t\tonChange={evt =>\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_FILTER',\n\t\t\t\t\tpayload: evt.target.value\n\t\t\t\t})\n\t\t\t}\n\t\t/>\n\t);\n};\n\nexport default PokemonFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\n\nimport PokemonType from '../PokemonType';\n\nconst PokemonRow = ({ pokemon, onSelect }) => (\n\t<tr>\n\t\t<td>{pokemon.name.english}</td>\n\t\t<td>{pokemon.type.join(', ')}</td>\n\t\t<td>\n\t\t\t<Button variant='contained' color='primary' onClick={() => onSelect(pokemon)}>\n\t\t\t\tSelect!\n\t\t\t</Button>\n\t\t</td>\n\t</tr>\n);\n\nPokemonRow.propTypes = {\n\tpokemon: PokemonType,\n\tonSelect: PropTypes.func.isRequired\n};\n\nexport default PokemonRow;\n","import React, { useContext } from 'react';\nimport PokemonContext from '../PokemonContex';\nimport PokemonRow from './PokemonRow';\n\nconst PokemonTable = () => {\n\tconst {\n\t\tstate: { pokemon, filter },\n\t\tdispatch\n\t} = useContext(PokemonContext);\n\n\treturn (\n\t\t<table width='100%'>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t<th>Type</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{pokemon\n\t\t\t\t\t.filter(pokemon =>\n\t\t\t\t\t\tpokemon.name.english.toLowerCase().includes(filter.toLowerCase())\n\t\t\t\t\t)\n\t\t\t\t\t.slice(0, 20)\n\t\t\t\t\t.map(pokemon => (\n\t\t\t\t\t\t<PokemonRow\n\t\t\t\t\t\t\tpokemon={pokemon}\n\t\t\t\t\t\t\tkey={pokemon.id}\n\t\t\t\t\t\t\tonSelect={pokemon =>\n\t\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\t\t\ttype: 'SET_SELECTED_POKEMON',\n\t\t\t\t\t\t\t\t\tpayload: pokemon\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}></PokemonRow>\n\t\t\t\t\t))}\n\t\t\t</tbody>\n\t\t</table>\n\t);\n};\n\nexport default PokemonTable;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { CssBaseline } from '@material-ui/core';\n\nimport './App.css';\n\nimport PokemonInfo from './components/PokemonInfo';\nimport PokemonFilter from './components/PokemonFilter';\nimport PokemonTable from './components/PokemonTable';\n\nimport PokemonContex from './PokemonContex';\n\nconst pokemonReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'SET_FILTER':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilter: action.payload\n\t\t\t};\n\t\tcase 'SET_POKEMON':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpokemon: action.payload\n\t\t\t};\n\t\tcase 'SET_SELECTED_POKEMON':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedPokemon: action.payload\n\t\t\t};\n\t\tdefault:\n\t\t\tthrow new Error('No action');\n\t}\n};\n\nconst Title = styled.h1`\n\ttext-align: center;\n`;\nconst PageContainer = styled.div`\n\tmargin: auto;\n\twidth: 800px;\n\tpadding-top: 1em;\n`;\nconst TwoColumnLayout = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: 80% 20%;\n\tgrid-column-gap: 1rem;\n`;\n\nfunction App() {\n\t// const [filter, filterSet] = React.useState('');\n\t// const [pokemon, pokemonSet] = React.useState([]);\n\t// const [selectedPokemon, selectedPokemonSet] = React.useState(null);\n\tconst [state, dispatch] = React.useReducer(pokemonReducer, {\n\t\tpokemon: [],\n\t\tfilter: '',\n\t\tselectedPokemon: null\n\t});\n\n\tReact.useEffect(() => {\n\t\tfetch(`/starting-react/pokemon.json`)\n\t\t\t.then(resp => resp.json())\n\t\t\t.then(data =>\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_POKEMON',\n\t\t\t\t\tpayload: data\n\t\t\t\t})\n\t\t\t);\n\t}, []);\n\n\tif (!state.pokemon) {\n\t\treturn <div>Loading data</div>;\n\t}\n\n\treturn (\n\t\t<PokemonContex.Provider\n\t\t\tvalue={{\n\t\t\t\t// filter,\n\t\t\t\t// pokemon,\n\t\t\t\t// selectedPokemon,\n\t\t\t\t// filterSet,\n\t\t\t\t// pokemonSet,\n\t\t\t\t// selectedPokemonSet,\n\t\t\t\tstate,\n\t\t\t\tdispatch\n\t\t\t}}>\n\t\t\t<PageContainer>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Title>Pokemon Search</Title>\n\t\t\t\t<TwoColumnLayout>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<PokemonFilter />\n\t\t\t\t\t\t<PokemonTable />\n\t\t\t\t\t</div>\n\t\t\t\t\t<PokemonInfo />\n\t\t\t\t</TwoColumnLayout>\n\t\t\t</PageContainer>\n\t\t</PokemonContex.Provider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CssBaseline } from '@material-ui/core';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<CssBaseline />\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}