{"version":3,"sources":["PokemonType.js","components/PokemonInfo.jsx","components/PokemonFilter.jsx","components/PokemonRow.jsx","components/PokemonTable.jsx","App.js","reportWebVitals.js","index.js"],"names":["PropTypes","shape","id","number","isRequired","name","english","string","japanese","chinese","french","type","arrayOf","base","HP","Attack","Defense","Speed","PokemonInfo","Object","keys","map","key","Input","styled","input","PokemonFilter","filter","filterSet","value","onChange","evt","target","PokemonRow","pokemon","onSelect","join","Button","variant","color","onClick","PokemonTable","selectedPokemonSet","width","pokenmon","toLowerCase","includes","slice","Title","h1","PageContainer","div","TwoColumnLayout","App","React","useState","pokemonSet","selectedPokemon","useEffect","fetch","then","resp","json","data","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f8db43e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst PokemonType = PropTypes.shape({\n\tid: PropTypes.number.isRequired,\n\tname: PropTypes.shape({\n\t\tenglish: PropTypes.string.isRequired,\n\t\tjapanese: PropTypes.string.isRequired,\n\t\tchinese: PropTypes.string.isRequired,\n\t\tfrench: PropTypes.string.isRequired\n\t}),\n\ttype: PropTypes.arrayOf(PropTypes.string.isRequired),\n\tbase: PropTypes.shape({\n\t\tHP: PropTypes.number.isRequired,\n\t\tAttack: PropTypes.number.isRequired,\n\t\tDefense: PropTypes.number.isRequired,\n\t\t'Sp. Attack': PropTypes.number.isRequired,\n\t\t'Sp. Defense': PropTypes.number.isRequired,\n\t\tSpeed: PropTypes.number.isRequired\n\t})\n});\n\nexport default PokemonType;\n","import React from 'react';\nimport PokemonType from '../PokemonType';\n\nconst PokemonInfo = ({ name: { english }, base }) => (\n\t<div>\n\t\t<h1>{english}</h1>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t{Object.keys(base).map(key => (\n\t\t\t\t\t<tr key={key}>\n\t\t\t\t\t\t<td>{key}</td>\n\t\t\t\t\t\t<td>{base[key]}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t))}\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n);\n\nPokemonInfo.propTypes = { pokemon: PokemonType };\n\nexport default PokemonInfo;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Input = styled.input`\n\twidth: 100%;\n\tpadding: 0.2rem;\n\tfont-size: large;\n`;\n\nconst PokemonFilter = ({ filter, filterSet }) => (\n\t<Input type='text' value={filter} onChange={evt => filterSet(evt.target.value)} />\n);\n\nexport default PokemonFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\n\nimport PokemonType from '../PokemonType';\n\nconst PokemonRow = ({ pokemon, onSelect }) => (\n\t<tr>\n\t\t<td>{pokemon.name.english}</td>\n\t\t<td>{pokemon.type.join(', ')}</td>\n\t\t<td>\n\t\t\t<Button variant='contained' color='primary' onClick={() => onSelect(pokemon)}>\n\t\t\t\tSelect!\n\t\t\t</Button>\n\t\t</td>\n\t</tr>\n);\n\nPokemonRow.propTypes = {\n\tpokemon: PokemonType,\n\tonSelect: PropTypes.func.isRequired\n};\n\nexport default PokemonRow;\n","import PokemonRow from './PokemonRow';\n\nconst PokemonTable = ({ pokemon, filter, selectedPokemonSet }) => (\n\t<table width='100%'>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>Name</th>\n\t\t\t\t<th>Type</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t{pokemon\n\t\t\t\t.filter(pokenmon =>\n\t\t\t\t\tpokenmon.name.english.toLowerCase().includes(filter.toLowerCase())\n\t\t\t\t)\n\t\t\t\t.slice(0, 20)\n\t\t\t\t.map(pokemon => (\n\t\t\t\t\t<PokemonRow\n\t\t\t\t\t\tpokemon={pokemon}\n\t\t\t\t\t\tkey={pokemon.id}\n\t\t\t\t\t\tonSelect={pokemon => selectedPokemonSet(pokemon)}></PokemonRow>\n\t\t\t\t))}\n\t\t</tbody>\n\t</table>\n);\n\nexport default PokemonTable;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { CssBaseline } from '@material-ui/core';\n\nimport './App.css';\n\nimport PokemonInfo from './components/PokemonInfo';\nimport PokemonFilter from './components/PokemonFilter';\nimport PokemonTable from './components/PokemonTable';\n\nconst Title = styled.h1`\n\ttext-align: center;\n`;\nconst PageContainer = styled.div`\n\tmargin: auto;\n\twidth: 800px;\n\tpadding-top: 1em;\n`;\nconst TwoColumnLayout = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: 80% 20%;\n\tgrid-column-gap: 1rem;\n`;\n\nfunction App() {\n\tconst [filter, filterSet] = React.useState('');\n\tconst [pokemon, pokemonSet] = React.useState([]);\n\tconst [selectedPokemon, selectedPokemonSet] = React.useState(null);\n\n\tReact.useEffect(() => {\n\t\t// let host =\n\t\t// \t!process.env.NODE_ENV || process.env.NODE_ENV === 'development'\n\t\t// \t\t? 'http://localhost:3000'\n\t\t// \t\t: '';\n\n\t\t// fetch(`${host}/starting-react/pokemon.json`)\n\t\tfetch(`/starting-react/pokemon.json`)\n\t\t\t.then(resp => resp.json())\n\t\t\t.then(data => pokemonSet(data));\n\t}, []);\n\n\tif (!pokemon) {\n\t\treturn <div>Loading data</div>;\n\t}\n\n\treturn (\n\t\t<PageContainer>\n\t\t\t<CssBaseline />\n\t\t\t<Title>Pokemon Search</Title>\n\t\t\t<TwoColumnLayout>\n\t\t\t\t<div>\n\t\t\t\t\t<PokemonFilter filter={filter} filterSet={filterSet} />\n\t\t\t\t\t<PokemonTable\n\t\t\t\t\t\tfilter={filter}\n\t\t\t\t\t\tpokemon={pokemon}\n\t\t\t\t\t\tselectedPokemonSet={selectedPokemonSet}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{selectedPokemon && <PokemonInfo {...selectedPokemon} />}\n\t\t\t</TwoColumnLayout>\n\t\t</PageContainer>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CssBaseline } from '@material-ui/core';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<CssBaseline />\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}